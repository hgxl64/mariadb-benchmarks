diff -Nurb dbt3-1.9-orig/queries/mysql/10.sql dbt3-1.9/queries/mysql/10.sql
--- dbt3-1.9-orig/queries/mysql/10.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/10.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,40 @@
+-- @(#)10.sql	2.1.8.1
+-- TPC-H/TPC-R Returned Item Reporting Query (Q10)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	c_custkey,
+	c_name,
+	sum(l_extendedprice * (1 - l_discount)) as revenue,
+	c_acctbal,
+	n_name,
+	c_address,
+	c_phone,
+	c_comment
+from
+	customer,
+	orders,
+	lineitem,
+	nation
+where
+	c_custkey = o_custkey
+	and l_orderkey = o_orderkey
+	and o_orderdate >= ':1'
+	and o_orderdate < date_add( ':1' , interval 3 month)
+	and l_returnflag = 'R'
+	and c_nationkey = n_nationkey
+group by
+	c_custkey,
+	c_name,
+	c_acctbal,
+	c_phone,
+	n_name,
+	c_address,
+	c_comment
+order by
+	revenue desc
+:n 20;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/11.sql dbt3-1.9/queries/mysql/11.sql
--- dbt3-1.9-orig/queries/mysql/11.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/11.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,35 @@
+-- @(#)11.sql	2.1.8.1
+-- TPC-H/TPC-R Important Stock Identification Query (Q11)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	ps_partkey,
+	sum(ps_supplycost * ps_availqty) as value
+from
+	partsupp,
+	supplier,
+	nation
+where
+	ps_suppkey = s_suppkey
+	and s_nationkey = n_nationkey
+	and n_name = ':1'
+group by
+	ps_partkey having
+		sum(ps_supplycost * ps_availqty) > (
+			select
+				sum(ps_supplycost * ps_availqty) * :2
+			from
+				partsupp,
+				supplier,
+				nation
+			where
+				ps_suppkey = s_suppkey
+				and s_nationkey = n_nationkey
+				and n_name = ':1'
+		)
+order by
+	value desc;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/12.sql dbt3-1.9/queries/mysql/12.sql
--- dbt3-1.9-orig/queries/mysql/12.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/12.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,36 @@
+-- @(#)12.sql	2.1.8.1
+-- TPC-H/TPC-R Shipping Modes and Order Priority Query (Q12)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	l_shipmode,
+	sum(case
+		when o_orderpriority = '1-URGENT'
+			or o_orderpriority = '2-HIGH'
+			then 1
+		else 0
+	end) as high_line_count,
+	sum(case
+		when o_orderpriority <> '1-URGENT'
+			and o_orderpriority <> '2-HIGH'
+			then 1
+		else 0
+	end) as low_line_count
+from
+	orders,
+	lineitem
+where
+	o_orderkey = l_orderkey
+	and l_shipmode in (':1', ':2')
+	and l_commitdate < l_receiptdate
+	and l_shipdate < l_commitdate
+	and l_receiptdate >= ':3'
+	and l_receiptdate < date_add( ':3' , interval 1 year)
+group by
+	l_shipmode
+order by
+	l_shipmode;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/13.sql dbt3-1.9/queries/mysql/13.sql
--- dbt3-1.9-orig/queries/mysql/13.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/13.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,28 @@
+-- @(#)13.sql	2.1.8.1
+-- TPC-H/TPC-R Customer Distribution Query (Q13)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	c_count,
+	count(*) as custdist
+from
+	(
+		select
+			c_custkey,
+			count(o_orderkey) as c_count
+		from
+			customer left outer join orders on
+				c_custkey = o_custkey
+				and o_comment not like '%:1%:2%'
+		group by
+			c_custkey
+	) as c_orders
+group by
+	c_count
+order by
+	custdist desc,
+	c_count desc;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/14.sql dbt3-1.9/queries/mysql/14.sql
--- dbt3-1.9-orig/queries/mysql/14.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/14.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,21 @@
+-- @(#)14.sql	2.1.8.1
+-- TPC-H/TPC-R Promotion Effect Query (Q14)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	100.00 * sum(case
+		when p_type like 'PROMO%'
+			then l_extendedprice * (1 - l_discount)
+		else 0
+	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
+from
+	lineitem,
+	part
+where
+	l_partkey = p_partkey
+	and l_shipdate >= ':1'
+	and l_shipdate < date_add( ':1' , interval 1 month);
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/15.sql dbt3-1.9/queries/mysql/15.sql
--- dbt3-1.9-orig/queries/mysql/15.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/15.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,41 @@
+-- @(#)15.sql	2.1.8.1
+-- TPC-H/TPC-R Top Supplier Query (Q15)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+create or replace view revenue:s (supplier_no, total_revenue) as
+	select
+		l_suppkey,
+		sum(l_extendedprice * (1 - l_discount))
+	from
+		lineitem
+	where
+		l_shipdate >= ':1'
+		and l_shipdate < date_add(':1', interval 90 day)
+	group by
+		l_suppkey;
+
+:x
+:o
+select
+	s_suppkey,
+	s_name,
+	s_address,
+	s_phone,
+	total_revenue
+from
+	supplier,
+	revenue:s
+where
+	s_suppkey = supplier_no
+	and total_revenue = (
+		select
+			max(total_revenue)
+		from
+			revenue:s
+	)
+order by
+	s_suppkey;
+
+drop view revenue:s;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/16.sql dbt3-1.9/queries/mysql/16.sql
--- dbt3-1.9-orig/queries/mysql/16.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/16.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,38 @@
+-- @(#)16.sql	2.1.8.1
+-- TPC-H/TPC-R Parts/Supplier Relationship Query (Q16)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	p_brand,
+	p_type,
+	p_size,
+	count(distinct ps_suppkey) as supplier_cnt
+from
+	partsupp,
+	part
+where
+	p_partkey = ps_partkey
+	and p_brand <> ':1'
+	and p_type not like ':2%'
+	and p_size in (:3, :4, :5, :6, :7, :8, :9, :10)
+	and ps_suppkey not in (
+		select
+			s_suppkey
+		from
+			supplier
+		where
+			s_comment like '%Customer%Complaints%'
+	)
+group by
+	p_brand,
+	p_type,
+	p_size
+order by
+	supplier_cnt desc,
+	p_brand,
+	p_type,
+	p_size;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/17.sql dbt3-1.9/queries/mysql/17.sql
--- dbt3-1.9-orig/queries/mysql/17.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/17.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,25 @@
+-- @(#)17.sql	2.1.8.1
+-- TPC-H/TPC-R Small-Quantity-Order Revenue Query (Q17)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	sum(l_extendedprice) / 7.0 as avg_yearly
+from
+	lineitem,
+	part
+where
+	p_partkey = l_partkey
+	and p_brand = ':1'
+	and p_container = ':2'
+	and l_quantity < (
+		select
+			0.2 * avg(l_quantity)
+		from
+			lineitem
+		where
+			l_partkey = p_partkey
+	);
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/18.sql dbt3-1.9/queries/mysql/18.sql
--- dbt3-1.9-orig/queries/mysql/18.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/18.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,41 @@
+-- @(#)18.sql	2.1.8.1
+-- TPC-H/TPC-R Large Volume Customer Query (Q18)
+-- Function Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	c_name,
+	c_custkey,
+	o_orderkey,
+	o_orderdate,
+	o_totalprice,
+	sum(l_quantity)
+from
+	customer,
+	orders,
+	lineitem
+where
+	o_orderkey in (
+		select
+			l_orderkey
+		from
+			lineitem
+		group by
+			l_orderkey having
+				sum(l_quantity) > :1
+	)
+	and c_custkey = o_custkey
+	and o_orderkey = l_orderkey
+group by
+	c_name,
+	c_custkey,
+	o_orderkey,
+	o_orderdate,
+	o_totalprice
+order by
+	o_totalprice desc,
+	o_orderdate
+:n 100;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/19.sql dbt3-1.9/queries/mysql/19.sql
--- dbt3-1.9-orig/queries/mysql/19.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/19.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,43 @@
+-- @(#)19.sql	2.1.8.1
+-- TPC-H/TPC-R Discounted Revenue Query (Q19)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	sum(l_extendedprice* (1 - l_discount)) as revenue
+from
+	lineitem,
+	part
+where
+	(
+		p_partkey = l_partkey
+		and p_brand = ':1'
+		and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
+		and l_quantity >= :4 and l_quantity <= :4+10
+		and p_size between 1 and 5
+		and l_shipmode in ('AIR', 'AIR REG')
+		and l_shipinstruct = 'DELIVER IN PERSON'
+	)
+	or
+	(
+		p_partkey = l_partkey
+		and p_brand = ':2'
+		and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
+		and l_quantity >= :5 and l_quantity <= :5+10
+		and p_size between 1 and 10
+		and l_shipmode in ('AIR', 'AIR REG')
+		and l_shipinstruct = 'DELIVER IN PERSON'
+	)
+	or
+	(
+		p_partkey = l_partkey
+		and p_brand = ':3'
+		and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
+		and l_quantity >= :6 and l_quantity <= :6+10
+		and p_size between 1 and 15
+		and l_shipmode in ('AIR', 'AIR REG')
+		and l_shipinstruct = 'DELIVER IN PERSON'
+	);
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/1.sql dbt3-1.9/queries/mysql/1.sql
--- dbt3-1.9-orig/queries/mysql/1.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/1.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,29 @@
+-- @(#)1.sql	2.1.8.1
+-- TPC-H/TPC-R Pricing Summary Report Query (Q1)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	l_returnflag,
+	l_linestatus,
+	sum(l_quantity) as sum_qty,
+	sum(l_extendedprice) as sum_base_price,
+	sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
+	sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
+	avg(l_quantity) as avg_qty,
+	avg(l_extendedprice) as avg_price,
+	avg(l_discount) as avg_disc,
+	count(*) as count_order
+from
+	lineitem
+where
+	l_shipdate <= date_sub('1998-12-01', interval :1 day)
+group by
+	l_returnflag,
+	l_linestatus
+order by
+	l_returnflag,
+	l_linestatus;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/20.sql dbt3-1.9/queries/mysql/20.sql
--- dbt3-1.9-orig/queries/mysql/20.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/20.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,40 @@
+-- @(#)20.sql	2.1.8.1
+-- TPC-H/TPC-R Potential Part Promotion Query (Q20)
+-- Function Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	s_name,
+	s_address
+from
+	supplier,
+	nation
+where
+	s_suppkey in (
+		select
+			distinct (ps_suppkey)
+		from
+			partsupp,
+			part
+		where
+			ps_partkey=p_partkey
+			and p_name like ':1%'
+			and ps_availqty > (
+				select
+					0.5 * sum(l_quantity)
+				from
+					lineitem
+				where
+					l_partkey = ps_partkey
+					and l_suppkey = ps_suppkey
+					and l_shipdate >= ':2'
+					and l_shipdate < date_ADD(':2',interval 1 year)
+			)
+	)
+	and s_nationkey = n_nationkey
+	and n_name = ':3'
+order by
+	s_name;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/21.sql dbt3-1.9/queries/mysql/21.sql
--- dbt3-1.9-orig/queries/mysql/21.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/21.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,48 @@
+-- @(#)21.sql	2.1.8.1
+-- TPC-H/TPC-R Suppliers Who Kept Orders Waiting Query (Q21)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	s_name,
+	count(*) as numwait
+from
+	supplier,
+	lineitem l1,
+	orders,
+	nation
+where
+	s_suppkey = l1.l_suppkey
+	and o_orderkey = l1.l_orderkey
+	and o_orderstatus = 'F'
+	and l1.l_receiptdate > l1.l_commitdate
+	and exists (
+		select
+			*
+		from
+			lineitem l2
+		where
+			l2.l_orderkey = l1.l_orderkey
+			and l2.l_suppkey <> l1.l_suppkey
+	)
+	and not exists (
+		select
+			*
+		from
+			lineitem l3
+		where
+			l3.l_orderkey = l1.l_orderkey
+			and l3.l_suppkey <> l1.l_suppkey
+			and l3.l_receiptdate > l3.l_commitdate
+	)
+	and s_nationkey = n_nationkey
+	and n_name = ':1'
+group by
+	s_name
+order by
+	numwait desc,
+	s_name
+:n 100
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/22.sql dbt3-1.9/queries/mysql/22.sql
--- dbt3-1.9-orig/queries/mysql/22.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/22.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,45 @@
+-- @(#)22.sql	2.1.8.1
+-- TPC-H/TPC-R Global Sales Opportunity Query (Q22)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	cntrycode,
+	count(*) as numcust,
+	sum(c_acctbal) as totacctbal
+from
+	(
+		select
+			substr(c_phone, 1, 2) as cntrycode,
+			c_acctbal
+		from
+			customer
+		where
+			substr(c_phone, 1, 2) in
+				(':1', ':2', ':3', ':4', ':5', ':6', ':7')
+			and c_acctbal > (
+				select
+					avg(c_acctbal)
+				from
+					customer
+				where
+					c_acctbal > 0.00
+					and substr(c_phone, 1, 2) in
+						(':1', ':2', ':3', ':4', ':5', ':6', ':7')
+			)
+			and not exists (
+				select
+					*
+				from
+					orders
+				where
+					o_custkey = c_custkey
+			)
+	) as vip
+group by
+	cntrycode
+order by
+	cntrycode;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/2.sql dbt3-1.9/queries/mysql/2.sql
--- dbt3-1.9-orig/queries/mysql/2.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/2.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,52 @@
+-- @(#)2.sql	2.1.8.2
+-- TPC-H/TPC-R Minimum Cost Supplier Query (Q2)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	s_acctbal,
+	s_name,
+	n_name,
+	p_partkey,
+	p_mfgr,
+	s_address,
+	s_phone,
+	s_comment
+from
+	part,
+	supplier,
+	partsupp,
+	nation,
+	region
+where
+	p_partkey = ps_partkey
+	and s_suppkey = ps_suppkey
+	and p_size = :1
+	and p_type like '%:2'
+	and s_nationkey = n_nationkey
+	and n_regionkey = r_regionkey
+	and r_name = ':3'
+	and ps_supplycost = (
+		select
+			min(ps_supplycost)
+		from
+			partsupp,
+			supplier,
+			nation,
+			region
+		where
+			p_partkey = ps_partkey
+			and s_suppkey = ps_suppkey
+			and s_nationkey = n_nationkey
+			and n_regionkey = r_regionkey
+			and r_name = ':3'
+	)
+order by
+	s_acctbal desc,
+	n_name,
+	s_name,
+	p_partkey
+:n 100;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/3.sql dbt3-1.9/queries/mysql/3.sql
--- dbt3-1.9-orig/queries/mysql/3.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/3.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,31 @@
+-- @(#)3.sql	2.1.8.1
+-- TPC-H/TPC-R Shipping Priority Query (Q3)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	l_orderkey,
+	sum(l_extendedprice * (1 - l_discount)) as revenue,
+	o_orderdate,
+	o_shippriority
+from
+	customer,
+	orders,
+	lineitem
+where
+	c_mktsegment = ':1'
+	and c_custkey = o_custkey
+	and l_orderkey = o_orderkey
+	and o_orderdate < ':2'
+	and l_shipdate > ':2'
+group by
+	l_orderkey,
+	o_orderdate,
+	o_shippriority
+order by
+	revenue desc,
+	o_orderdate
+:n 10;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/4.sql dbt3-1.9/queries/mysql/4.sql
--- dbt3-1.9-orig/queries/mysql/4.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/4.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,29 @@
+-- @(#)4.sql	2.1.8.1
+-- TPC-H/TPC-R Order Priority Checking Query (Q4)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	o_orderpriority,
+	count(*) as order_count
+from
+	orders
+where
+	o_orderdate >= date ':1'
+	and o_orderdate < date_add( ':1', interval 3 month)
+	and exists (
+		select
+			*
+		from
+			lineitem
+		where
+			l_orderkey = o_orderkey
+			and l_commitdate < l_receiptdate
+	)
+group by
+	o_orderpriority
+order by
+	o_orderpriority;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/5.sql dbt3-1.9/queries/mysql/5.sql
--- dbt3-1.9-orig/queries/mysql/5.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/5.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,32 @@
+-- @(#)5.sql	2.1.8.1
+-- TPC-H/TPC-R Local Supplier Volume Query (Q5)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	n_name,
+	sum(l_extendedprice * (1 - l_discount)) as revenue
+from
+	customer,
+	orders,
+	lineitem,
+	supplier,
+	nation,
+	region
+where
+	c_custkey = o_custkey
+	and l_orderkey = o_orderkey
+	and l_suppkey = s_suppkey
+	and c_nationkey = s_nationkey
+	and s_nationkey = n_nationkey
+	and n_regionkey = r_regionkey
+	and r_name = ':1'
+	and o_orderdate >= ':2'
+	and o_orderdate < date_add( ':2' , interval 1 year)
+group by
+	n_name
+order by
+	revenue desc;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/6.sql dbt3-1.9/queries/mysql/6.sql
--- dbt3-1.9-orig/queries/mysql/6.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/6.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,17 @@
+-- @(#)6.sql	2.1.8.1
+-- TPC-H/TPC-R Forecasting Revenue Change Query (Q6)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	sum(l_extendedprice * l_discount) as revenue
+from
+	lineitem
+where
+	l_shipdate >= ':1'
+	and l_shipdate < date_add( ':1' , interval 1 year)
+	and l_discount between :2 - 0.01 and :2 + 0.01
+	and l_quantity < :3;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/7.sql dbt3-1.9/queries/mysql/7.sql
--- dbt3-1.9-orig/queries/mysql/7.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/7.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,47 @@
+-- @(#)7.sql	2.1.8.1
+-- TPC-H/TPC-R Volume Shipping Query (Q7)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	supp_nation,
+	cust_nation,
+	l_year,
+	sum(volume) as revenue
+from
+	(
+		select
+			n1.n_name as supp_nation,
+			n2.n_name as cust_nation,
+			year(l_shipdate) as l_year,
+			l_extendedprice * (1 - l_discount) as volume
+		from
+			supplier,
+			lineitem,
+			orders,
+			customer,
+			nation n1,
+			nation n2
+		where
+			s_suppkey = l_suppkey
+			and o_orderkey = l_orderkey
+			and c_custkey = o_custkey
+			and s_nationkey = n1.n_nationkey
+			and c_nationkey = n2.n_nationkey
+			and (
+				(n1.n_name = ':1' and n2.n_name = ':2')
+				or (n1.n_name = ':2' and n2.n_name = ':1')
+			)
+			and l_shipdate between date('1995-01-01') and date('1996-12-31')
+	) as shipping
+group by
+	supp_nation,
+	cust_nation,
+	l_year
+order by
+	supp_nation,
+	cust_nation,
+	l_year;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/8.sql dbt3-1.9/queries/mysql/8.sql
--- dbt3-1.9-orig/queries/mysql/8.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/8.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,45 @@
+-- @(#)8.sql	2.1.8.1
+-- TPC-H/TPC-R National Market Share Query (Q8)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	o_year,
+	sum(case
+		when nation = ':1' then volume
+		else 0
+	end) / sum(volume) as mkt_share
+from
+	(
+		select
+			year(o_orderdate) as o_year,
+			l_extendedprice * (1 - l_discount) as volume,
+			n2.n_name as nation
+		from
+			part,
+			supplier,
+			lineitem,
+			orders,
+			customer,
+			nation n1,
+			nation n2,
+			region
+		where
+			p_partkey = l_partkey
+			and s_suppkey = l_suppkey
+			and l_orderkey = o_orderkey
+			and o_custkey = c_custkey
+			and c_nationkey = n1.n_nationkey
+			and n1.n_regionkey = r_regionkey
+			and r_name = ':2'
+			and s_nationkey = n2.n_nationkey
+			and o_orderdate between date('1995-01-01') and date ('1996-12-31')
+			and p_type = ':3'
+	) as all_nations
+group by
+	o_year
+order by
+	o_year;
+:e
diff -Nurb dbt3-1.9-orig/queries/mysql/9.sql dbt3-1.9/queries/mysql/9.sql
--- dbt3-1.9-orig/queries/mysql/9.sql	1970-01-01 01:00:00.000000000 +0100
+++ dbt3-1.9/queries/mysql/9.sql	2012-01-02 17:54:58.000000000 +0100
@@ -0,0 +1,40 @@
+-- @(#)9.sql	2.1.8.1
+-- TPC-H/TPC-R Product Type Profit Measure Query (Q9)
+-- Functional Query Definition
+-- Approved February 1998
+:b
+:x
+:o
+select
+	nation,
+	o_year,
+	sum(amount) as sum_profit
+from
+	(
+		select
+			n_name as nation,
+			year(o_orderdate) as o_year,
+			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
+		from
+			part,
+			supplier,
+			lineitem,
+			partsupp,
+			orders,
+			nation
+		where
+			s_suppkey = l_suppkey
+			and ps_suppkey = l_suppkey
+			and ps_partkey = l_partkey
+			and p_partkey = l_partkey
+			and o_orderkey = l_orderkey
+			and s_nationkey = n_nationkey
+			and p_name like '%:1%'
+	) as profit
+group by
+	nation,
+	o_year
+order by
+	nation,
+	o_year desc;
+:e
diff -Nurb dbt3-1.9-orig/src/dbgen/Makefile dbt3-1.9/src/dbgen/Makefile
--- dbt3-1.9-orig/src/dbgen/Makefile	2005-05-18 21:49:50.000000000 +0200
+++ dbt3-1.9/src/dbgen/Makefile	2012-01-04 17:38:18.000000000 +0100
@@ -4,7 +4,7 @@
 # Current values for MACHINE are:  ATT, DOS, HP, IBM, ICL, MVS, 
 #                                  SGI, SUN, U2200, VMS
 # Current values for WORKLOAD are:  TPCH, TPCR
-DATABASE=PGSQL
+DATABASE=MYSQLDB
 MACHINE =HP 
 WORKLOAD =TPCH
 #
diff -Nurb dbt3-1.9-orig/src/dbgen/tpcd.h dbt3-1.9/src/dbgen/tpcd.h
--- dbt3-1.9-orig/src/dbgen/tpcd.h	2005-05-18 20:30:41.000000000 +0200
+++ dbt3-1.9/src/dbgen/tpcd.h	2012-01-04 17:38:18.000000000 +0100
@@ -44,13 +44,22 @@
 
 #ifdef PGSQL
 #define GEN_QUERY_PLAN  "EXPLAIN"
-#define START_TRAN      "START"
+#define START_TRAN      "BEGIN;"
 #define END_TRAN        "COMMIT;"
 #define SET_OUTPUT      ""
 #define SET_ROWCOUNT    "LIMIT %d;\n"
 #define SET_DBASE       "CONNECT TO %s ;\n"
 #endif /* PGSQL */
 
+#ifdef MYSQLDB
+#define GEN_QUERY_PLAN  "EXPLAIN"
+#define START_TRAN      "BEGIN;"
+#define END_TRAN        "COMMIT;"
+#define SET_OUTPUT      ""
+#define SET_ROWCOUNT    "LIMIT %d;\n"
+#define SET_DBASE       "use %s ;\n"
+#endif /* mysqldb */
+
 #ifdef DB2
 #define GEN_QUERY_PLAN  "SET CURRENT EXPLAIN SNAPSHOT ON;"
 #define START_TRAN      ""
