Testing server 'MySQL 5.5.21 MariaDB' at 2012-01-31  0:24:14

Testing the speed of inserting data into 1 table and do some selects on it.
The tests are done with a table that has 100000 rows.

Generating random keys
Creating tables
Inserting 100000 multiple-value rows in order
Inserting 100000 multiple-value rows in reverse order
Inserting 100000 multiple-value rows in random order
Time for insert (300000):  2 wallclock secs ( 0.28 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.29 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing insert of duplicates
Time for insert_duplicates (100000):  4 wallclock secs ( 0.97 usr  0.47 sys +  0.00 cusr  0.00 csys =  1.44 CPU)

Test of prepared+execute/once prepared many execute selects
Time for prepared_select (100000): 12 wallclock secs ( 4.94 usr  0.53 sys +  0.00 cusr  0.00 csys =  5.47 CPU)
Time for once_prepared_select (100000): 10 wallclock secs ( 2.05 usr  1.17 sys +  0.00 cusr  0.00 csys =  3.22 CPU)
Retrieving data from the table
Time for select_big (10:3000000):  5 wallclock secs ( 4.12 usr  0.00 sys +  0.00 cusr  0.00 csys =  4.12 CPU)
Time for order_by_big_key (10:3000000):  5 wallclock secs ( 4.14 usr  0.00 sys +  0.00 cusr  0.00 csys =  4.14 CPU)
Time for order_by_big_key_desc (10:3000000):  6 wallclock secs ( 4.14 usr  0.03 sys +  0.00 cusr  0.00 csys =  4.17 CPU)
Time for order_by_big_key_prefix (10:3000000):  5 wallclock secs ( 3.94 usr  0.04 sys +  0.00 cusr  0.00 csys =  3.98 CPU)
Time for order_by_big_key2 (10:3000000):  5 wallclock secs ( 4.04 usr  0.03 sys +  0.00 cusr  0.00 csys =  4.07 CPU)
Time for order_by_big_key_diff (10:3000000):  5 wallclock secs ( 4.03 usr  0.04 sys +  0.00 cusr  0.00 csys =  4.07 CPU)
Time for order_by_big (10:3000000):  5 wallclock secs ( 4.04 usr  0.03 sys +  0.00 cusr  0.00 csys =  4.07 CPU)
Time for order_by_range (500:125750):  0 wallclock secs ( 0.22 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.23 CPU)
Time for order_by_key_prefix (500:125750):  1 wallclock secs ( 0.21 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.22 CPU)
Time for order_by_key2_diff (500:250500):  1 wallclock secs ( 0.38 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.39 CPU)
Time for select_diff_key (500:1000):  0 wallclock secs ( 0.04 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.04 CPU)
Time for select_range_prefix (5010:42084):  2 wallclock secs ( 0.56 usr  0.05 sys +  0.00 cusr  0.00 csys =  0.61 CPU)
Time for select_range_key2 (5010:42084):  1 wallclock secs ( 0.53 usr  0.06 sys +  0.00 cusr  0.00 csys =  0.59 CPU)
Time for select_key_prefix (200000): 26 wallclock secs (10.12 usr  2.28 sys +  0.00 cusr  0.00 csys = 12.40 CPU)
Time for select_key (200000): 20 wallclock secs ( 9.44 usr  1.56 sys +  0.00 cusr  0.00 csys = 11.00 CPU)
Time for select_key_return_key (200000): 20 wallclock secs ( 9.48 usr  1.28 sys +  0.00 cusr  0.00 csys = 10.76 CPU)
Time for select_key2 (200000): 25 wallclock secs (10.07 usr  2.24 sys +  0.00 cusr  0.00 csys = 12.31 CPU)
Time for select_key2_return_key (200000): 23 wallclock secs ( 9.92 usr  1.58 sys +  0.00 cusr  0.00 csys = 11.50 CPU)
Time for select_key2_return_prim (200000): 25 wallclock secs (10.75 usr  1.39 sys +  0.00 cusr  0.00 csys = 12.14 CPU)

Test of compares with simple ranges
Time for select_range_prefix (20000:43500):  2 wallclock secs ( 0.67 usr  0.08 sys +  0.00 cusr  0.00 csys =  0.75 CPU)
Time for select_range_key2 (20000:43500):  1 wallclock secs ( 0.65 usr  0.09 sys +  0.00 cusr  0.00 csys =  0.74 CPU)
Time for select_group (111):  5 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for min_max_on_key (15000):  1 wallclock secs ( 0.72 usr  0.10 sys +  0.00 cusr  0.00 csys =  0.82 CPU)
Time for min_max (60):  2 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for count_on_key (100):  4 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for count (100):  2 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for count_distinct_big (20):  4 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Testing update of keys with functions
Time for update_of_key (50000):   4 wallclock secs ( 0.39 usr  0.28 sys +  0.00 cusr  0.00 csys =  0.67 CPU)
Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for update_of_key_big (501):  2 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing update with key
Time for update_with_key (300000):  18 wallclock secs ( 1.99 usr  1.33 sys +  0.00 cusr  0.00 csys =  3.32 CPU)
Time for update_with_key_prefix (100000):   6 wallclock secs ( 1.32 usr  0.60 sys +  0.00 cusr  0.00 csys =  1.92 CPU)

Testing update of all rows
Time for update_big (10):   4 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Testing left outer join
Time for outer_join_on_key (10:10):   5 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join (10:10):   6 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join_found (10:10):   5 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join_not_found (500:10):   5 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (10 values)
Time for select_in (500:5000)  0 wallclock secs ( 0.04 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.05 CPU)

Time for select_join_in (500:5000)  0 wallclock secs ( 0.03 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.04 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (100 values)
Time for select_in (500:50000)  1 wallclock secs ( 0.13 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.13 CPU)

Time for select_join_in (500:50000)  0 wallclock secs ( 0.14 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.14 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (1000 values)
Time for select_in (500:500000)  4 wallclock secs ( 0.82 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.82 CPU)

Time for select_join_in (500:500000)  3 wallclock secs ( 0.81 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.81 CPU)


Testing INSERT INTO ... SELECT
Time for insert_select_1_key (1):   0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for insert_select_2_keys (1):   1 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for drop table(2):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing delete
Time for delete_key (10000):  1 wallclock secs ( 0.06 usr  0.06 sys +  0.00 cusr  0.00 csys =  0.12 CPU)
Time for delete_range (12):  1 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Insert into table with 16 keys and with a primary key with 16 parts
Time for insert_key (100000):  6 wallclock secs ( 0.54 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.54 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing update of keys
Time for update_of_primary_key_many_keys (256):  2 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for book-keeping (1):  1 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Deleting rows from the table
Time for delete_big_many_keys (128):  4 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Deleting everything from table
Time for delete_all_many_keys (1):  4 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Total time: 308 wallclock secs (106.81 usr 15.38 sys +  0.00 cusr  0.00 csys = 122.19 CPU)
