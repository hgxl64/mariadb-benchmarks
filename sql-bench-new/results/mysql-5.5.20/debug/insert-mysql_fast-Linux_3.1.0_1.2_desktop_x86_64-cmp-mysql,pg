Testing server 'MySQL 5.5.20 debug' at 2012-01-26  9:30:46

Testing the speed of inserting data into 1 table and do some selects on it.
The tests are done with a table that has 100000 rows.

Generating random keys
Creating tables
Inserting 100000 multiple-value rows in order
Inserting 100000 multiple-value rows in reverse order
Inserting 100000 multiple-value rows in random order
Time for insert (300000):  5 wallclock secs ( 0.28 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.29 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing insert of duplicates
Time for insert_duplicates (100000):  6 wallclock secs ( 0.93 usr  0.41 sys +  0.00 cusr  0.00 csys =  1.34 CPU)

Test of prepared+execute/once prepared many execute selects
Time for prepared_select (100000): 16 wallclock secs ( 4.96 usr  0.96 sys +  0.00 cusr  0.00 csys =  5.92 CPU)
Time for once_prepared_select (100000): 13 wallclock secs ( 2.17 usr  0.73 sys +  0.00 cusr  0.00 csys =  2.90 CPU)
Retrieving data from the table
Time for select_big (10:3000000):  6 wallclock secs ( 4.23 usr  0.00 sys +  0.00 cusr  0.00 csys =  4.23 CPU)
Time for order_by_big_key (10:3000000):  8 wallclock secs ( 4.26 usr  0.00 sys +  0.00 cusr  0.00 csys =  4.26 CPU)
Time for order_by_big_key_desc (10:3000000):  8 wallclock secs ( 4.22 usr  0.04 sys +  0.00 cusr  0.00 csys =  4.26 CPU)
Time for order_by_big_key_prefix (10:3000000):  8 wallclock secs ( 4.15 usr  0.04 sys +  0.00 cusr  0.00 csys =  4.19 CPU)
Time for order_by_big_key2 (10:3000000):  6 wallclock secs ( 4.16 usr  0.03 sys +  0.00 cusr  0.00 csys =  4.19 CPU)
Time for order_by_big_key_diff (10:3000000):  8 wallclock secs ( 4.13 usr  0.04 sys +  0.00 cusr  0.00 csys =  4.17 CPU)
Time for order_by_big (10:3000000):  7 wallclock secs ( 4.19 usr  0.05 sys +  0.00 cusr  0.00 csys =  4.24 CPU)
Time for order_by_range (500:125750):  1 wallclock secs ( 0.23 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.23 CPU)
Time for order_by_key_prefix (500:125750):  0 wallclock secs ( 0.21 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.22 CPU)
Time for order_by_key2_diff (500:250500):  1 wallclock secs ( 0.38 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.39 CPU)
Time for select_diff_key (500:1000):  0 wallclock secs ( 0.04 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.04 CPU)
Time for select_range_prefix (5010:42084):  3 wallclock secs ( 0.54 usr  0.07 sys +  0.00 cusr  0.00 csys =  0.61 CPU)
Time for select_range_key2 (5010:42084):  3 wallclock secs ( 0.56 usr  0.05 sys +  0.00 cusr  0.00 csys =  0.61 CPU)
Time for select_key_prefix (200000): 36 wallclock secs (12.76 usr  1.88 sys +  0.00 cusr  0.00 csys = 14.64 CPU)
Time for select_key (200000): 30 wallclock secs (12.31 usr  1.77 sys +  0.00 cusr  0.00 csys = 14.08 CPU)
Time for select_key_return_key (200000): 28 wallclock secs (11.87 usr  1.77 sys +  0.00 cusr  0.00 csys = 13.64 CPU)
Time for select_key2 (200000): 31 wallclock secs (11.23 usr  1.60 sys +  0.00 cusr  0.00 csys = 12.83 CPU)
Time for select_key2_return_key (200000): 33 wallclock secs (12.51 usr  1.92 sys +  0.00 cusr  0.00 csys = 14.43 CPU)
Time for select_key2_return_prim (200000): 34 wallclock secs (13.27 usr  1.52 sys +  0.00 cusr  0.00 csys = 14.79 CPU)

Test of compares with simple ranges
Time for select_range_prefix (20000:43500):  3 wallclock secs ( 0.78 usr  0.07 sys +  0.00 cusr  0.00 csys =  0.85 CPU)
Time for select_range_key2 (20000:43500):  2 wallclock secs ( 0.76 usr  0.10 sys +  0.00 cusr  0.00 csys =  0.86 CPU)
Time for select_group (111): 14 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for min_max_on_key (15000):  2 wallclock secs ( 0.92 usr  0.12 sys +  0.00 cusr  0.00 csys =  1.04 CPU)
Time for min_max (60):  7 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for count_on_key (100): 13 wallclock secs ( 0.01 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.02 CPU)
Time for count (100):  9 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)
Time for count_distinct_big (20):  8 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing update of keys with functions
Time for update_of_key (50000):   6 wallclock secs ( 0.66 usr  0.36 sys +  0.00 cusr  0.00 csys =  1.02 CPU)
Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for update_of_key_big (501):  8 wallclock secs ( 0.01 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing update with key
Time for update_with_key (300000):  29 wallclock secs ( 3.88 usr  2.30 sys +  0.00 cusr  0.00 csys =  6.18 CPU)
Time for update_with_key_prefix (100000):  10 wallclock secs ( 2.58 usr  0.69 sys +  0.00 cusr  0.00 csys =  3.27 CPU)

Testing update of all rows
Time for update_big (10):   7 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing left outer join
Time for outer_join_on_key (10:10):  19 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join (10:10):  19 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join_found (10:10):  19 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for outer_join_not_found (500:10):  17 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (10 values)
Time for select_in (500:5000)  0 wallclock secs ( 0.05 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.05 CPU)

Time for select_join_in (500:5000)  0 wallclock secs ( 0.04 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.05 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (100 values)
Time for select_in (500:50000)  2 wallclock secs ( 0.14 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.14 CPU)

Time for select_join_in (500:50000)  0 wallclock secs ( 0.12 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.13 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing SELECT ... WHERE id in (1000 values)
Time for select_in (500:500000) 16 wallclock secs ( 0.84 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.84 CPU)

Time for select_join_in (500:500000)  4 wallclock secs ( 0.84 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.84 CPU)


Testing INSERT INTO ... SELECT
Time for insert_select_1_key (1):   3 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for insert_select_2_keys (1):   2 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)
Time for drop table(2):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing delete
Time for delete_key (10000):  1 wallclock secs ( 0.10 usr  0.05 sys +  0.00 cusr  0.00 csys =  0.15 CPU)
Time for delete_range (12):  3 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Insert into table with 16 keys and with a primary key with 16 parts
Time for insert_key (100000): 16 wallclock secs ( 0.54 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.54 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Testing update of keys
Time for update_of_primary_key_many_keys (256):  8 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Time for book-keeping (1):  0 wallclock secs ( 0.00 usr  0.00 sys +  0.00 cusr  0.00 csys =  0.00 CPU)

Deleting rows from the table
Time for delete_big_many_keys (128): 13 wallclock secs ( 0.00 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Deleting everything from table
Time for delete_all_many_keys (1): 13 wallclock secs ( 0.00 usr  0.01 sys +  0.00 cusr  0.00 csys =  0.01 CPU)

Total time: 551 wallclock secs (125.90 usr 16.65 sys +  0.00 cusr  0.00 csys = 142.55 CPU)
